<nodes type="instance" name="instances 1">
	<sourceConnections source="node0" target="node1"/>
</nodes>
<nodes type="storage" name="storage 1">
</nodes>

// Read XML, and transform it into our meta model by creating instances of each class in our metamodel.
LinkedList<Node> Nodes;
Nodes[0] = new Instance("instances 1", ...);
Nodes[1] = new Storage("a hard drive");

Nodes[0].AddChild(Nodes[1]);

// Now we have the G-CProvML completely loaded into our meta model.
// Write some transformation code to work with our meta model and produce the
	X-CProvML
	

<cloudProvision>
	<environment id="E1" name="E1">
		<storage id="S1" name="A hard drive">
		</storage>
		
		<instance id="I1" name="Instance 1">
			<connections>
				<storage id="S1"/>
				<instance id="I2"/>
				<network id="N1"/>
			</connections>
		</instance>
		
		<network id="N1">
		</network>
		
		<instance id="I2" name="Instance 2">
			<connections>
				<storage id="S1"/>
				<instance id="I1"/>
				<network id="N1"/>
			</connections>
		</instance>
		
		<connections>
			<environment id="E2"/>
		</connections>
	</environment>
</cloudProvision>


CREATE http://ec2.amazon.com/api/createEnvironment
	PARAMS:
		name: 
		instances:
		


Create an environment with:
	1) A hard drive.
	2) A network.
	3) Two instances connected to each other AND to the network, both sharing the hard drive.

Create a second environment with:
	...
	
Connect the two environments together


See the example diagram (ExampleDiagram.png). This is the corresponding X-CProvML XML:

<cloudProvision>

	<storage name="storage">
		<connections>
			<instance name="sql"/>
			<instance name="web2"/>
		</connections>
	</storage>
	
	<storage name="webstorage">
		<connections>
			<instance name="web"/>
		</connections>
	</storage>
	
	<environment name="environment">
		
		<instance name="site">
			<connections>
				<instance name="web"/>
			</connections>
		</instance>
		
		<instance name="sql">
			<connections>
				<instance name="web"/>
			</connections>
		</instance>
		
		<instance name="web2">
		</instance>
		
	</environment>
	
	<instance name="web">
	</instance>
	
</cloudProvision>